# Generated by Django 4.2.1 on 2023-11-14 07:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('email', models.CharField(max_length=30, unique=True, verbose_name='E-mail')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_cost', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Full cost')),
                ('date_time', models.DateTimeField(verbose_name='Date and time')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer', verbose_name='Customer')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('SberPay', 'SberPay'), ('GooglePay', 'GooglePay'), ('Card', 'Card'), ('QR-code', 'QR-code')], max_length=10, unique=True, verbose_name='Payment type')),
            ],
            options={
                'db_table': 'payment_type',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_type', models.CharField(max_length=20, unique=True, verbose_name='Product type')),
            ],
            options={
                'db_table': 'product_type',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.TextField(unique=True, verbose_name='Product')),
                ('description', models.TextField(unique=True, verbose_name='Description')),
                ('img', models.ImageField(blank=True, upload_to='products_img', verbose_name='Фото продукта')),
                ('quantity_in_stock', models.IntegerField(verbose_name='In stock')),
                ('prime_cost', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Prime cost')),
                ('final_cost', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Full cost')),
                ('product_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producttype', verbose_name='Product type')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.order', verbose_name='Order')),
                ('payment_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paymenttype', verbose_name='Payment type')),
            ],
            options={
                'db_table': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.order', verbose_name='Order')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product', verbose_name='Product')),
            ],
            options={
                'db_table': 'order_product',
            },
        ),
    ]
